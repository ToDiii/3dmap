name: Release

on:
  push:
    branches: ["main"]
    tags: ["v*.*.*"]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'
      - name: Install deps
        run: npm ci
      - name: Lint
        run: npm run lint --if-present
      - name: Unit tests
        run: npm test

  docker:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Determine tags
        id: meta
        run: |
          IMAGE_NAME_LC="${IMAGE_NAME,,}"
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            VERSION="${GITHUB_REF#refs/tags/}"
            echo "tags=${IMAGE_NAME_LC}:${VERSION},${IMAGE_NAME_LC}:latest" >> $GITHUB_OUTPUT
          else
            echo "tags=${IMAGE_NAME_LC}:latest" >> $GITHUB_OUTPUT
          fi
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [ docker ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Extract release notes from CHANGELOG
        id: notes
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          awk "/## \\[${TAG}\\]/{flag=1;next}/^## \\[/{flag=0}flag" CHANGELOG.md > RELEASE_NOTES.md || true
          if [ ! -s RELEASE_NOTES.md ]; then
            echo "No specific notes found; using Unreleased section or fallback."
            awk '/## \\[Unreleased\\]/{flag=1;next}/^## \\[/{flag=0}flag' CHANGELOG.md > RELEASE_NOTES.md || true
          fi
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: RELEASE_NOTES.md
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
